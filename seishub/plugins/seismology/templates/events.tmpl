#def CSS
<link rel="stylesheet" type="text/css" href="/yui2/build/assets/skins/sam/skin.css" />
#end def
#def JAVASCRIPT
<script type="text/javascript" src="/yui2/build/yuiloader-dom-event/yuiloader-dom-event.js"></script>
<script type="text/javascript" src="/yui2/build/event-delegate/event-delegate-min.js"></script>
<script type="text/javascript" src="/yui2/build/element/element-min.js"></script>
<script type="text/javascript" src="/yui2/build/container/container-min.js"></script>
<script type="text/javascript" src="/yui2/build/menu/menu-min.js"></script>
<script type="text/javascript" src="/yui2/build/button/button-min.js"></script>
<script type="text/javascript" src="/yui2/build/connection/connection_core-min.js"></script>
<script type="text/javascript" src="/yui2/build/datasource/datasource-min.js"></script>
<script type="text/javascript" src="/yui2/build/paginator/paginator-min.js"></script>
<script type="text/javascript" src="/yui2/build/datatable/datatable-min.js"></script>
<script type="text/javascript" src="/yui2/build/tabview/tabview-min.js"></script>
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="/manage/markercluster/markerclusterer_compiled.js"></script>
#end def


<h1>Events</h1>

<form method="post" id="filter" action="">
  <fieldset id="filter_fieldset">
    <legend>Filter</legend>
    <div class="field-left">
      <label>End</label><br />
      <input type="text" size="10" name="start_datetime" value="" />
      <div id="cal1Container"></div> 
    </div>
    <div class="field">
      <label>Start</label><br />
      <input type="text" size="10" id="date" name="date" value="" />
      <button type="button" id="show" title="Show Calendar">
        <img src="/yui2/assets/calbtn.gif" alt="Calendar" />
      </button>
    </div>
    <div class="field-left">
      <label>Min. Magnitude</label><br />
      <input type="text" size="5" id="min_magnitude" name="min_magnitude" 
             value="0" />
    </div>
    <div class="field-left">
      <label>Max. Magnitude</label><br />
      <input type="text" size="5" id="max_magnitude" name="max_magnitude" 
             value="10" />
    </div>
    <div class="field-left">
      <label>Min. Latitude</label><br />
      <input type="text" size="5" id="min_latitude" name="min_latitude" 
        value="-90" />
    </div>
    <div class="field-left">
      <label>Max. Latitude</label><br />
      <input type="text" size="5" id="max_latitude" name="max_latitude" 
        value="90" />
    </div>
    <div class="field-left">
      <label>Min. Longitude</label><br />
      <input type="text" size="5" id="min_longitude" name="min_longitude" 
        value="-180" />
    </div>
    <div class="field">
      <label>Max. Longitude</label><br />
      <input type="text" size="5" id="max_longitude" name="max_longitude" 
        value="180" />
    </div>
    <div class="field">
      <div> 
        <input id="search_button" type="submit" name="search_button" 
               value="Search" /> 
      </div> 
    </div>
  </fieldset>
</form>

<br />

<div id="events" class="yui-navset">
  <ul class="yui-nav">
    <li class="selected"><a href="#eventtable"><em>Table</em></a></li>
    <li><a href="#eventmap"><em>Map</em></a></li>
  </ul>
  <div class="yui-content">
    <div id="eventtable"> </div>
    <div id="eventmap" style="width: 100%; height: 100%;">
      <div id="map_canvas" style="width: 100%; height: 700px;"> </div>
    </div>
  </div>
</div>


<script type="text/javascript">
/* <![CDATA[ */

YAHOO.util.Event.onContentReady("filter_fieldset", function () {
    var b1 = new YAHOO.widget.Button("search_button");
    var tabs = new YAHOO.widget.TabView('events');
});


YAHOO.util.Event.addListener(window, "unload", google.maps.GUnload)


YAHOO.util.Event.addListener(window, "load", function ()
{
  var url = "/seismology/event/getList?format=json&";

  // DataSource instance
  var myDS = new YAHOO.util.DataSource(url);
  myDS.responseType = YAHOO.util.DataSource.TYPE_JSON;
  myDS.connXhrMode = "queueRequests";
  myDS.responseSchema = {
    resultsList: "ResultSet.Result",
    fields:["magnitude", "datetime", "latitude", "longitude", "resource_name"],
  };

  // Google Map
  var map = new google.maps.Map(document.getElementById("map_canvas"), {
    mapTypeId: google.maps.MapTypeId.TERRAIN
  });

  // Set initial request
  var info = '<a target="_blank" href="/xml/seismology/event/'
  
  // Column definitions
  var myColumnDefs =[
  {
    key: "datetime", label: "DateTime"
  },
  {
    key: "magnitude", label: "Magnitude"
  },
  {
    key: "latitude", label: "Latitude [&deg;]"
  },
  {
    key: "longitude", label: "Longitude [&deg;]"
  },
  {
    key: "resource_name", label: "Resource", className: 'center',
    formatter: function (el, oRecord, oColumn, oData)
    {
      el.innerHTML = info + oData + '">[XML]<\/a> ' +
      info + oData + '?format=map">[MAP]<\/a>';
    }
  },
  {
    key: "resource_name", label: "Indexes", className: 'center',
    formatter: function (el, oRecord, oColumn, oData)
    {
      el.innerHTML = info + oData + '/.index">[XML]<\/a> ' +
      info + oData + '/.index?format=json">[JSON]<\/a> ' +
      info + oData + '/.index?format=xhtml">[XHTML]<\/a>';
    }
  },
  {
    key: "resource_name", label: 'Meta Data', className: 'center',
    formatter: function (el, oRecord, oColumn, oData)
    {
      el.innerHTML = info + oData + '/.meta">[XML]<\/a> ' +
      info + oData + '/.meta?format=json">[JSON]<\/a> ' +
      info + oData + '/.meta?format=xhtml">[XHTML]<\/a>';
    }
  }];
  
  
  var myRequestBuilder = function (oState, oSelf)
  {
    // Get states or use defaults
    oState = oState ||
    {
      pagination: null, sortedBy: null
    };
    var offset = (oState.pagination)? oState.pagination.recordOffset: 0;
    var limit = (oState.pagination)? oState.pagination.rowsPerPage: null;
    // Build custom request
    return ""
    //return "&offset=" + offset + "&limit=" + limit;
  };
  
  var initialRequest='';
  
  // DataTable configuration
  var myConfigs =
  {
    initialRequest: initialRequest,
    paginator: new YAHOO.widget.Paginator(
    {
      rowsPerPage: 20,
      rowsPerPageOptions:[10, 20, 50, 100],
    }),
  };

  // DataTable instance
  var myDT = new YAHOO.widget.DataTable("eventtable", myColumnDefs, myDS,
  myConfigs);

  // Enable row highlighting
  myDT.subscribe("rowMouseoverEvent", myDT.onEventHighlightRow);
  myDT.subscribe("rowMouseoutEvent", myDT.onEventUnhighlightRow);

  myDS.doBeforeParseData = function( oRequest , oFullResponse , oCallback ) {
    
    var data = oFullResponse.ResultSet.Result;
    var markers = []
    // Create a LatLngBounds object
    var bounds = new google.maps.LatLngBounds();
    // Loop over data
    for (var i = 0; i < data.length; i++)
    {
      var point = new google.maps.LatLng(data[i].latitude, data[i].longitude);
      // Add marker
      var marker = new google.maps.Marker({
        position: point,
        map: map,
        alt: data[i].magnitude,
        icon: 'http://chart.apis.google.com/chart?cht=it&chs=32x32&chco=30FF30,000000ff,ffffff01&chl=' +
        data[i].magnitude + '&chx=000000,0&chf=bg,s,00000000&ext=.png'
      });
      markers.push(marker);
      // Extend the LatLngBound object
      bounds.extend(point);
    }
    var markerCluster = new MarkerClusterer(map, markers, {maxZoom: 5});
    map.fitBounds(bounds);
    return oFullResponse;
  }
});
/* ]]> */
</script>
